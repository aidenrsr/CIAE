{"ast":null,"code":"var _jsxFileName = \"/Users/chungdaecheol/CIAE/CIAE/src/components/TurtleVillage/DeepSea.js\",\n  _s = $RefreshSig$();\nimport './css/DeepSea.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeepSea() {\n  _s();\n  const [turtlePosition, setTurtlePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [turtleDirection, setTurtleDirection] = useState('right');\n  const backgroundRef = useRef(null);\n  useEffect(() => {\n    const handleKeyDown = event => {\n      const step = 10;\n      const backgroundRect = backgroundRef.current.getBoundingClientRect();\n      const turtleSize = {\n        width: 50,\n        height: 50\n      }; // 거북이 이미지의 크기를 적절히 조정하세요\n\n      const newPosition = {\n        ...turtlePosition\n      };\n      switch (event.key) {\n        case 'ArrowUp':\n          newPosition.y = Math.max(0, turtlePosition.y - step);\n          break;\n        case 'ArrowDown':\n          newPosition.y = Math.min(backgroundRect.height - turtleSize.height, turtlePosition.y + step);\n          break;\n        case 'ArrowLeft':\n          newPosition.x = Math.max(0, turtlePosition.x - step);\n          setTurtleDirection('left');\n          break;\n        case 'ArrowRight':\n          newPosition.x = Math.min(backgroundRect.width - turtleSize.width, turtlePosition.x + step);\n          setTurtleDirection('right');\n          break;\n        default:\n          return;\n      }\n      setTurtlePosition(newPosition);\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [turtlePosition]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pageName\",\n        children: \"\\uC2EC\\uD574\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Login\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"logOut\",\n          children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DeepSea_Background\",\n        ref: backgroundRef,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/UnderTheSea.png\",\n          className: \"UnderTheSea_Image\",\n          alt: \"UnderTheSea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/Turtle_Right.png\",\n          alt: \"Turtle\",\n          style: {\n            position: 'absolute',\n            left: `${turtlePosition.x}px`,\n            top: `${turtlePosition.y}px`,\n            transform: `scaleX(${turtleDirection === 'left' ? -1 : 1})`,\n            transition: 'left 0.1s, top 0.1s'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(DeepSea, \"WxxkpHKGemRO31w2w27OsbS8j/o=\");\n_c = DeepSea;\nvar _c;\n$RefreshReg$(_c, \"DeepSea\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","jsxDEV","_jsxDEV","DeepSea","_s","turtlePosition","setTurtlePosition","x","y","turtleDirection","setTurtleDirection","backgroundRef","handleKeyDown","event","step","backgroundRect","current","getBoundingClientRect","turtleSize","width","height","newPosition","key","Math","max","min","window","addEventListener","removeEventListener","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","ref","src","alt","style","position","left","top","transform","transition","_c","$RefreshReg$"],"sources":["/Users/chungdaecheol/CIAE/CIAE/src/components/TurtleVillage/DeepSea.js"],"sourcesContent":["import './css/DeepSea.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function DeepSea() {\n    const [turtlePosition, setTurtlePosition] = useState({ x: 0, y: 0 });\n    const [turtleDirection, setTurtleDirection] = useState('right');\n    const backgroundRef = useRef(null);\n\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            const step = 10;\n            const backgroundRect = backgroundRef.current.getBoundingClientRect();\n            const turtleSize = { width: 50, height: 50 }; // 거북이 이미지의 크기를 적절히 조정하세요\n\n            const newPosition = { ...turtlePosition };\n\n            switch (event.key) {\n                case 'ArrowUp':\n                    newPosition.y = Math.max(0, turtlePosition.y - step);\n                    break;\n                case 'ArrowDown':\n                    newPosition.y = Math.min(backgroundRect.height - turtleSize.height, turtlePosition.y + step);\n                    break;\n                case 'ArrowLeft':\n                    newPosition.x = Math.max(0, turtlePosition.x - step);\n                    setTurtleDirection('left');\n                    break;\n                case 'ArrowRight':\n                    newPosition.x = Math.min(backgroundRect.width - turtleSize.width, turtlePosition.x + step);\n                    setTurtleDirection('right');\n                    break;\n                default:\n                    return;\n            }\n\n            setTurtlePosition(newPosition);\n        };\n\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [turtlePosition]);\n\n    return (\n        <div>\n            <div className='menu'>\n                <p className='pageName'>심해</p>\n                <Link to='/Login'><p className='logOut'>로그아웃</p></Link>\n                <div className='DeepSea_Background' ref={backgroundRef}>\n                    <img src='/UnderTheSea.png' className='UnderTheSea_Image' alt='UnderTheSea'></img>\n                    <img \n                        src='/Turtle_Right.png' \n                        alt='Turtle'\n                        style={{\n                            position: 'absolute',\n                            left: `${turtlePosition.x}px`,\n                            top: `${turtlePosition.y}px`,\n                            transform: `scaleX(${turtleDirection === 'left' ? -1 : 1})`,\n                            transition: 'left 0.1s, top 0.1s'\n                        }}\n                    />\n                </div>\n            </div>\n            {/* 여기에 DeepSea 컴포넌트의 주요 내용을 추가하세요 */}\n        </div>\n    )\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}