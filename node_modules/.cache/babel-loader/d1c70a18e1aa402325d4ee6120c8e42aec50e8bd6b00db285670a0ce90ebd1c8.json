{"ast":null,"code":"var _jsxFileName = \"/Users/chungdaecheol/CIAE_GITHUB/CIAE/src/components/Learning.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport './css/Learning.css';\nimport React, { useState, useEffect } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function callOpenAI(messages, setAiResponse) {\n  const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n  const url = 'https://api.openai.com/v1/chat/completions';\n  const data = {\n    model: \"gpt-4\",\n    messages: messages,\n    // 전체 대화 기록을 포함\n    max_tokens: 3000,\n    stream: false // 스트리밍 비활성화\n  };\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${apiKey}`\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n    const jsonResponse = await response.json();\n    const newMessage = jsonResponse.choices[0].message.content;\n    setAiResponse(newMessage); // 새로운 AI 응답 설정\n  } catch (error) {\n    console.error('Error calling OpenAI API:', error);\n    setAiResponse('API 호출 중 오류가 발생했습니다.');\n  }\n}\npdfjs.GlobalWorkerOptions.workerSrc = '/pdf.worker.mjs';\n// 버튼 컴포넌트 정의\nfunction Button({\n  name,\n  src,\n  alt,\n  onClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: src,\n    className: name,\n    alt: alt,\n    onClick: onClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this); // 이미지 버튼 생성\n}\n\n// PDF 문서 보기 및 탐색을 위한 컴포넌트\n_c = Button;\nfunction Reading({\n  onAITrigger\n}) {\n  _s();\n  const [pageNumber, setPageNumber] = useState(1); // 현재 페이지 번호 상태\n  const [numPages, setNumPages] = useState(null); // 총 페이지 수 상태\n\n  // PDF 문서 로드 성공 시 총 페이지 수를 설정하는 함수\n  const onDocumentLoadSuccess = ({\n    numPages\n  }) => {\n    setNumPages(numPages);\n  };\n\n  // 이전 페이지로 이동하는 함수\n  const goToPrevPage = () => {\n    if (pageNumber > 2) setPageNumber(pageNumber - 2);\n  };\n\n  // 다음 페이지로 이동하는 함수\n  const goToNextPage = () => {\n    if (pageNumber + 1 < numPages) {\n      setPageNumber(pageNumber + 2);\n    }\n    if (pageNumber >= 9) {\n      onAITrigger(); // 9페이지 이상일 경우 AI 트리거\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      name: \"Learning_Button_Left\",\n      src: \"/Left.png\",\n      alt: \"Left navigation button\",\n      onClick: goToPrevPage // 왼쪽 화살표 버튼으로 이전 페이지로 이동\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Learning_Book_Left\",\n      children: /*#__PURE__*/_jsxDEV(Document, {\n        file: \"/Hamlet.pdf\",\n        onLoadSuccess: onDocumentLoadSuccess,\n        className: \"pdf-document\",\n        children: [/*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: pageNumber,\n          renderTextLayer: false,\n          className: \"pdf-page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Learning_Book_Right\",\n      children: /*#__PURE__*/_jsxDEV(Document, {\n        file: \"/Hamlet.pdf\",\n        onLoadSuccess: onDocumentLoadSuccess,\n        className: \"pdf-document\",\n        children: [/*#__PURE__*/_jsxDEV(Page, {\n          pageNumber: pageNumber + 1,\n          renderTextLayer: false,\n          className: \"pdf-page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      name: \"Learning_Button_Right\",\n      src: \"/Right.png\",\n      alt: \"Right navigation button\",\n      onClick: goToNextPage // 오른쪽 화살표 버튼으로 다음 페이지로 이동\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Reading, \"aRO1BSQU9M9ATMKFnOll9cRWRF0=\");\n_c2 = Reading;\nfunction Ai() {\n  _s2();\n  const [messages, setMessages] = useState([{\n    \"role\": \"system\",\n    \"content\": \"You are a turtle character, 10 years old, specializing in psychological and bibliotherapy. \\\n            You attend elementary school. You have a lively and cheerful personality, and you’re skilled at keeping conversations going.\\\n             You empathize well with others' words and speak kindly, with a cute tone typical of teenagers. Use informal language instead of honorifics, \\\n             and add emojis seldomly. Answer in Korean. 반말 쓰라고.\"\n  }, {\n    \"role\": \"assistant\",\n    \"content\": \"오늘 주인공이 겪은 거랑 비슷한 일 너도 겪어본 적 있어? \"\n  } // 초기 질문\n  ]);\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [aiResponse, setAiResponse] = useState(\"오늘 주인공이 겪은 거랑 비슷한 일 너도 겪어본 적 있어?\");\n  const [showContinue, setShowContinue] = useState(false);\n  const [isDone, setIsDone] = useState(false);\n  const [showHomeButton, setShowHomeButton] = useState(false);\n  const [stopCount, setStopCount] = useState(0); // 추가: Stop 버튼 클릭 횟수 상태\n\n  const startListening = () => {\n    setIsListening(true);\n    setShowContinue(false);\n    setIsDone(false);\n  };\n  const handleStop = async () => {\n    setIsListening(false);\n    setShowContinue(true);\n    setStopCount(stopCount + 1); // Stop 버튼 클릭 횟수 증가\n\n    // 유저의 답변 추가\n    const userMessage = {\n      \"role\": \"user\",\n      \"content\": transcript\n    };\n    const updatedMessages = [...messages, userMessage]; // 기존 메시지 + 유저 응답\n\n    // AI로부터 새 질문을 받음\n    await callOpenAI(updatedMessages, response => {\n      setAiResponse(response);\n      setMessages([...updatedMessages, {\n        \"role\": \"assistant\",\n        \"content\": response\n      }]); // 전체 대화 기록 업데이트\n    });\n\n    // 유저의 답변에 따라 AI 질문을 업데이트\n    if (transcript) {\n      const followUpQuestion = `당신의 답변에 대해 더 이야기해볼까요?`; // 사용자 답변에 기반한 후속 질문\n      setAiResponse(followUpQuestion);\n      setMessages([...updatedMessages, {\n        \"role\": \"assistant\",\n        \"content\": followUpQuestion\n      }]); // 후속 질문 추가\n    }\n    setTranscript(''); // 유저 답변 초기화\n  };\n  const handleDone = () => {\n    setAiResponse('');\n    setTranscript('');\n    setIsListening(false);\n    setShowContinue(false);\n    setIsDone(true);\n    setShowHomeButton(true);\n  };\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert('이 브라우저는 음성 인식을 지원하지 않습니다.');\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = 'ko-KR';\n    recognition.interimResults = false;\n    recognition.onresult = event => {\n      const speechToText = event.results[0][0].transcript;\n      setTranscript(speechToText);\n    };\n    recognition.onerror = event => {\n      console.error('음성 인식 오류:', event.error);\n    };\n    if (isListening) recognition.start();else recognition.stop();\n    return () => recognition.stop();\n  }, [isListening]);\n\n  // 변경 후\n  if (showHomeButton) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Learning_Container active\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LearningWon active\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '100vh',\n            width: '100vw',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"MessageForUser\",\n            children: \"This is the End of our Test!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"/Home\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"Home_Button\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `Learning_Container active ${isDone ? 'completed' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LearningWon active\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/Teacher.png\",\n        alt: \"AI_Chat_Bot\",\n        className: \"AI_ChatBot_Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/UserProfile.png\",\n        alt: \"AI_Chat_User3\",\n        className: \"AI_Chat_User_Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this), !isListening && !showContinue && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/AnswerStart.png\",\n        alt: \"Start\",\n        className: \"AnswerStart\",\n        onClick: startListening\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), isListening && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/Stop.png\",\n        alt: \"Stop\",\n        className: \"AnswerStart\",\n        onClick: handleStop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), showContinue && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/ContinueStart.png\",\n        alt: \"continue\",\n        className: \"Continue\",\n        onClick: () => {\n          setShowContinue(false);\n          startListening();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), stopCount >= 2 &&\n      /*#__PURE__*/\n      // Stop 버튼을 2번 이상 누르면 Done 버튼 표시\n      _jsxDEV(\"img\", {\n        src: \"/Done.png\",\n        onClick: handleDone,\n        className: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AI_Question\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: aiResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"User\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n}\n_s2(Ai, \"j/yxXcyZSlSiqTlQueHvtL32Kss=\");\n_c3 = Ai;\nexport default function Learning() {\n  _s3();\n  const [showAI, setShowAI] = useState(false);\n  const handleAITrigger = () => {\n    setShowAI(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: showAI ? /*#__PURE__*/_jsxDEV(Ai, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Reading, {\n      onAITrigger: handleAITrigger\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 232,\n    columnNumber: 9\n  }, this);\n}\n_s3(Learning, \"ZuGRYK+oHgFOItstUePAxFJ2NQM=\");\n_c4 = Learning;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Reading\");\n$RefreshReg$(_c3, \"Ai\");\n$RefreshReg$(_c4, \"Learning\");","map":{"version":3,"names":["React","useState","useEffect","Document","Page","pdfjs","jsxDEV","_jsxDEV","Fragment","_Fragment","callOpenAI","messages","setAiResponse","apiKey","process","env","REACT_APP_OPENAI_API_KEY","url","data","model","max_tokens","stream","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","jsonResponse","json","newMessage","choices","message","content","error","console","GlobalWorkerOptions","workerSrc","Button","name","src","alt","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","Reading","onAITrigger","_s","pageNumber","setPageNumber","numPages","setNumPages","onDocumentLoadSuccess","goToPrevPage","goToNextPage","children","file","onLoadSuccess","renderTextLayer","_c2","Ai","_s2","setMessages","transcript","setTranscript","isListening","setIsListening","aiResponse","showContinue","setShowContinue","isDone","setIsDone","showHomeButton","setShowHomeButton","stopCount","setStopCount","startListening","handleStop","userMessage","updatedMessages","followUpQuestion","handleDone","SpeechRecognition","window","webkitSpeechRecognition","alert","recognition","lang","interimResults","onresult","event","speechToText","results","onerror","start","stop","style","height","width","display","justifyContent","alignItems","href","_c3","Learning","_s3","showAI","setShowAI","handleAITrigger","_c4","$RefreshReg$"],"sources":["/Users/chungdaecheol/CIAE_GITHUB/CIAE/src/components/Learning.js"],"sourcesContent":["import './css/Learning.css';\nimport React, { useState, useEffect } from 'react';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\n\nasync function callOpenAI(messages, setAiResponse) {\n    const apiKey = process.env.REACT_APP_OPENAI_API_KEY;\n    const url = 'https://api.openai.com/v1/chat/completions';\n\n    const data = {\n        model: \"gpt-4\",\n        messages: messages, // 전체 대화 기록을 포함\n        max_tokens: 3000,\n        stream: false // 스트리밍 비활성화\n    };\n\n    try {\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${apiKey}`\n            },\n            body: JSON.stringify(data)\n        });\n\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n\n        const jsonResponse = await response.json();\n        const newMessage = jsonResponse.choices[0].message.content;\n        setAiResponse(newMessage); // 새로운 AI 응답 설정\n    } catch (error) {\n        console.error('Error calling OpenAI API:', error);\n        setAiResponse('API 호출 중 오류가 발생했습니다.');\n    }\n}\n\npdfjs.GlobalWorkerOptions.workerSrc = '/pdf.worker.mjs';\n// 버튼 컴포넌트 정의\nfunction Button({ name, src, alt, onClick }) {\n    return <img src={src} className={name} alt={alt} onClick={onClick} />; // 이미지 버튼 생성\n}\n\n// PDF 문서 보기 및 탐색을 위한 컴포넌트\nfunction Reading({ onAITrigger }) {\n    const [pageNumber, setPageNumber] = useState(1); // 현재 페이지 번호 상태\n    const [numPages, setNumPages] = useState(null); // 총 페이지 수 상태\n\n    // PDF 문서 로드 성공 시 총 페이지 수를 설정하는 함수\n    const onDocumentLoadSuccess = ({ numPages }) => {\n        setNumPages(numPages);\n    };\n\n    // 이전 페이지로 이동하는 함수\n    const goToPrevPage = () => {\n        if (pageNumber > 2) setPageNumber(pageNumber - 2);\n    };\n\n    // 다음 페이지로 이동하는 함수\n    const goToNextPage = () => {\n        if (pageNumber + 1 < numPages) {\n            setPageNumber(pageNumber + 2);\n        }\n        if (pageNumber >= 9) {\n            onAITrigger(); // 9페이지 이상일 경우 AI 트리거\n        }\n    };\n\n    return (\n        <>\n            <Button\n                name='Learning_Button_Left'\n                src='/Left.png'\n                alt=\"Left navigation button\"\n                onClick={goToPrevPage} // 왼쪽 화살표 버튼으로 이전 페이지로 이동\n            />\n            <div className='Learning_Book_Left'>\n                <Document file='/Hamlet.pdf' onLoadSuccess={onDocumentLoadSuccess} className=\"pdf-document\">\n                    <Page pageNumber={pageNumber} renderTextLayer={false} className=\"pdf-page\"/> {/* 왼쪽 페이지 표시 */}\n                </Document>\n            </div>\n            <div className='Learning_Book_Right'>\n                <Document file='/Hamlet.pdf' onLoadSuccess={onDocumentLoadSuccess} className=\"pdf-document\">\n                    <Page pageNumber={pageNumber + 1} renderTextLayer={false} className=\"pdf-page\"/> {/* 오른쪽 페이지 표시 */}\n                </Document>\n            </div>\n            <Button\n                name='Learning_Button_Right'\n                src='/Right.png'\n                alt=\"Right navigation button\"\n                onClick={goToNextPage} // 오른쪽 화살표 버튼으로 다음 페이지로 이동\n            />\n        </>\n    );\n}\n\nfunction Ai() {\n    const [messages, setMessages] = useState([\n        { \"role\": \"system\", \"content\": \"You are a turtle character, 10 years old, specializing in psychological and bibliotherapy. \\\n            You attend elementary school. You have a lively and cheerful personality, and you’re skilled at keeping conversations going.\\\n             You empathize well with others' words and speak kindly, with a cute tone typical of teenagers. Use informal language instead of honorifics, \\\n             and add emojis seldomly. Answer in Korean. 반말 쓰라고.\" },\n        { \"role\": \"assistant\", \"content\": \"오늘 주인공이 겪은 거랑 비슷한 일 너도 겪어본 적 있어? \" } // 초기 질문\n    ]);\n    const [transcript, setTranscript] = useState('');\n    const [isListening, setIsListening] = useState(false);\n    const [aiResponse, setAiResponse] = useState(\"오늘 주인공이 겪은 거랑 비슷한 일 너도 겪어본 적 있어?\" );\n    const [showContinue, setShowContinue] = useState(false);\n    const [isDone, setIsDone] = useState(false);\n    const [showHomeButton, setShowHomeButton] = useState(false);\n    const [stopCount, setStopCount] = useState(0); // 추가: Stop 버튼 클릭 횟수 상태\n\n    const startListening = () => {\n        setIsListening(true);\n        setShowContinue(false);\n        setIsDone(false);\n    };\n\n    const handleStop = async () => {\n        setIsListening(false);\n        setShowContinue(true);\n        setStopCount(stopCount + 1); // Stop 버튼 클릭 횟수 증가\n\n        // 유저의 답변 추가\n        const userMessage = { \"role\": \"user\", \"content\": transcript };\n        const updatedMessages = [...messages, userMessage]; // 기존 메시지 + 유저 응답\n\n        // AI로부터 새 질문을 받음\n        await callOpenAI(updatedMessages, (response) => {\n            setAiResponse(response);\n            setMessages([...updatedMessages, { \"role\": \"assistant\", \"content\": response }]); // 전체 대화 기록 업데이트\n        });\n\n        // 유저의 답변에 따라 AI 질문을 업데이트\n        if (transcript) {\n            const followUpQuestion = `당신의 답변에 대해 더 이야기해볼까요?`; // 사용자 답변에 기반한 후속 질문\n            setAiResponse(followUpQuestion);\n            setMessages([...updatedMessages, { \"role\": \"assistant\", \"content\": followUpQuestion }]); // 후속 질문 추가\n        }\n\n        setTranscript(''); // 유저 답변 초기화\n    };\n\n    const handleDone = () => {\n        setAiResponse('');\n        setTranscript('');\n        setIsListening(false);\n        setShowContinue(false);\n        setIsDone(true);\n        setShowHomeButton(true);\n    };\n\n    useEffect(() => {\n        const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n        if (!SpeechRecognition) {\n            alert('이 브라우저는 음성 인식을 지원하지 않습니다.');\n            return;\n        }\n\n        const recognition = new SpeechRecognition();\n        recognition.lang = 'ko-KR';\n        recognition.interimResults = false;\n\n        recognition.onresult = (event) => {\n            const speechToText = event.results[0][0].transcript;\n            setTranscript(speechToText);\n        };\n\n        recognition.onerror = (event) => {\n            console.error('음성 인식 오류:', event.error);\n        };\n\n        if (isListening) recognition.start();\n        else recognition.stop();\n\n        return () => recognition.stop();\n    }, [isListening]);\n\n    // 변경 후\nif (showHomeButton) {\n    return (\n        <div className='Learning_Container active'>\n            <div className='LearningWon active'>\n                <div style={{ height: '100vh', width: '100vw', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <h1 className='MessageForUser'>This is the End of our Test!</h1>\n                    <a href=\"/Home\">\n                        <button className='Home_Button'>Home</button>\n                    </a>\n                </div>\n            </div>\n        </div>\n        \n    );\n}\n\nreturn (\n    <div className={`Learning_Container active ${isDone ? 'completed' : ''}`}>\n        <div className='LearningWon active'>\n            <img src='/Teacher.png' alt='AI_Chat_Bot' className='AI_ChatBot_Image'/>\n            <img src='/UserProfile.png' alt='AI_Chat_User3' className='AI_Chat_User_Image'/>\n            {!isListening && !showContinue && (\n                <img src='/AnswerStart.png' alt='Start' className='AnswerStart' onClick={startListening}/>\n            )}\n            {isListening && (\n                <img src='/Stop.png' alt='Stop' className='AnswerStart' onClick={handleStop}/>\n            )}\n            {showContinue && (\n                <img src='/ContinueStart.png' alt='continue' className='Continue' onClick={() => { setShowContinue(false); startListening(); }}/>\n            )}\n            {stopCount >= 2 && ( // Stop 버튼을 2번 이상 누르면 Done 버튼 표시\n                <img src='/Done.png' onClick={handleDone} className='Done'/>\n            )}\n            <div className='AI_Question'>\n                <h3>{aiResponse}</h3>\n            </div>\n            <div className='User'>\n                <p>{transcript}</p>\n            </div>\n        </div>\n    </div>\n);\n}\n\nexport default function Learning() {\n    const [showAI, setShowAI] = useState(false);\n\n    const handleAITrigger = () => {\n        setShowAI(true);\n    };\n\n    return (\n        <div>\n            {showAI ? (\n                <Ai />\n            ) : (\n                <Reading onAITrigger={handleAITrigger} />\n            )}\n        </div>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}