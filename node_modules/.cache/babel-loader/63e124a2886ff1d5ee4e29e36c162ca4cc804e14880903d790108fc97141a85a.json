{"ast":null,"code":"var _jsxFileName = \"/Users/chungdaecheol/CIAE/CIAE/src/components/TurtleVillage/DeepSea.js\",\n  _s = $RefreshSig$();\nimport './css/DeepSea.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DeepSea() {\n  _s();\n  const [turtlePosition, setTurtlePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [turtleDirection, setTurtleDirection] = useState('right');\n  const [fishPosition, setFishPosition] = useState({\n    x: 200,\n    y: 200\n  });\n  const [showBubble, setShowBubble] = useState(false);\n  const backgroundRef = useRef(null);\n  useEffect(() => {\n    const handleKeyDown = event => {\n      const step = 10;\n      const backgroundRect = backgroundRef.current.getBoundingClientRect();\n      const turtleSize = {\n        width: 50,\n        height: 50\n      }; // 거북이 이미지의 크기를 적절히 조정하세요\n\n      const newPosition = {\n        ...turtlePosition\n      };\n      switch (event.key) {\n        case 'ArrowUp':\n          newPosition.y = Math.max(0, turtlePosition.y - step);\n          break;\n        case 'ArrowDown':\n          newPosition.y = Math.min(backgroundRect.height - turtleSize.height, turtlePosition.y + step);\n          break;\n        case 'ArrowLeft':\n          newPosition.x = Math.max(0, turtlePosition.x - step);\n          setTurtleDirection('left');\n          break;\n        case 'ArrowRight':\n          newPosition.x = Math.min(backgroundRect.width - turtleSize.width, turtlePosition.x + step);\n          setTurtleDirection('right');\n          break;\n        default:\n          return;\n      }\n\n      // 거북이와 물고기의 충돌 감지\n      const turtleRect = {\n        left: newPosition.x,\n        right: newPosition.x + 50,\n        top: newPosition.y,\n        bottom: newPosition.y + 50\n      };\n      const fishRect = {\n        left: fishPosition.x,\n        right: fishPosition.x + 30,\n        top: fishPosition.y,\n        bottom: fishPosition.y + 30\n      };\n      if (turtleRect.left < fishRect.right && turtleRect.right > fishRect.left && turtleRect.top < fishRect.bottom && turtleRect.bottom > fishRect.top) {\n        setShowBubble(true);\n        setTimeout(() => setShowBubble(false), 1000);\n        // 물고기를 새로운 위치로 이동\n        setFishPosition({\n          x: Math.random() * (backgroundRect.width - 30),\n          y: Math.random() * (backgroundRect.height - 30)\n        });\n      }\n      setTurtlePosition(newPosition);\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [turtlePosition, fishPosition]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pageName\",\n        children: \"\\uC2EC\\uD574\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Login\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"logOut\",\n          children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DeepSea_Background\",\n        ref: backgroundRef,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/UnderTheSea.png\",\n          className: \"UnderTheSea_Image\",\n          alt: \"UnderTheSea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            left: `${fishPosition.x}px`,\n            top: `${fishPosition.y}px`,\n            width: '30px',\n            height: '30px',\n            backgroundColor: 'orange'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/Turtle_Right.png\",\n          alt: \"Turtle\",\n          style: {\n            position: 'absolute',\n            left: `${turtlePosition.x}px`,\n            top: `${turtlePosition.y}px`,\n            transform: `scaleX(${turtleDirection === 'left' ? -1 : 1})`,\n            transition: 'left 0.1s, top 0.1s',\n            width: '50px',\n            height: '50px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), showBubble && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            left: `${turtlePosition.x + 60}px`,\n            top: `${turtlePosition.y - 30}px`,\n            backgroundColor: 'white',\n            borderRadius: '15px',\n            padding: '5px 10px',\n            boxShadow: '0 0 5px rgba(0,0,0,0.3)'\n          },\n          children: \"\\uB9DB\\uC788\\uC5B4!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(DeepSea, \"KJjsO2jl3CrLTNJ6lyFxIPleyEQ=\");\n_c = DeepSea;\nvar _c;\n$RefreshReg$(_c, \"DeepSea\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","jsxDEV","_jsxDEV","DeepSea","_s","turtlePosition","setTurtlePosition","x","y","turtleDirection","setTurtleDirection","fishPosition","setFishPosition","showBubble","setShowBubble","backgroundRef","handleKeyDown","event","step","backgroundRect","current","getBoundingClientRect","turtleSize","width","height","newPosition","key","Math","max","min","turtleRect","left","right","top","bottom","fishRect","setTimeout","random","window","addEventListener","removeEventListener","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","ref","src","alt","style","position","backgroundColor","transform","transition","borderRadius","padding","boxShadow","_c","$RefreshReg$"],"sources":["/Users/chungdaecheol/CIAE/CIAE/src/components/TurtleVillage/DeepSea.js"],"sourcesContent":["import './css/DeepSea.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function DeepSea() {\n    const [turtlePosition, setTurtlePosition] = useState({ x: 0, y: 0 });\n    const [turtleDirection, setTurtleDirection] = useState('right');\n    const [fishPosition, setFishPosition] = useState({ x: 200, y: 200 });\n    const [showBubble, setShowBubble] = useState(false);\n    const backgroundRef = useRef(null);\n\n    useEffect(() => {\n        const handleKeyDown = (event) => {\n            const step = 10;\n            const backgroundRect = backgroundRef.current.getBoundingClientRect();\n            const turtleSize = { width: 50, height: 50 }; // 거북이 이미지의 크기를 적절히 조정하세요\n\n            const newPosition = { ...turtlePosition };\n\n            switch (event.key) {\n                case 'ArrowUp':\n                    newPosition.y = Math.max(0, turtlePosition.y - step);\n                    break;\n                case 'ArrowDown':\n                    newPosition.y = Math.min(backgroundRect.height - turtleSize.height, turtlePosition.y + step);\n                    break;\n                case 'ArrowLeft':\n                    newPosition.x = Math.max(0, turtlePosition.x - step);\n                    setTurtleDirection('left');\n                    break;\n                case 'ArrowRight':\n                    newPosition.x = Math.min(backgroundRect.width - turtleSize.width, turtlePosition.x + step);\n                    setTurtleDirection('right');\n                    break;\n                default:\n                    return;\n            }\n\n            // 거북이와 물고기의 충돌 감지\n            const turtleRect = {\n                left: newPosition.x,\n                right: newPosition.x + 50,\n                top: newPosition.y,\n                bottom: newPosition.y + 50\n            };\n            const fishRect = {\n                left: fishPosition.x,\n                right: fishPosition.x + 30,\n                top: fishPosition.y,\n                bottom: fishPosition.y + 30\n            };\n\n            if (\n                turtleRect.left < fishRect.right &&\n                turtleRect.right > fishRect.left &&\n                turtleRect.top < fishRect.bottom &&\n                turtleRect.bottom > fishRect.top\n            ) {\n                setShowBubble(true);\n                setTimeout(() => setShowBubble(false), 1000);\n                // 물고기를 새로운 위치로 이동\n                setFishPosition({\n                    x: Math.random() * (backgroundRect.width - 30),\n                    y: Math.random() * (backgroundRect.height - 30)\n                });\n            }\n\n            setTurtlePosition(newPosition);\n        };\n\n        window.addEventListener('keydown', handleKeyDown);\n        return () => {\n            window.removeEventListener('keydown', handleKeyDown);\n        };\n    }, [turtlePosition, fishPosition]);\n\n    return (\n        <div>\n            <div className='menu'>\n                <p className='pageName'>심해</p>\n                <Link to='/Login'><p className='logOut'>로그아웃</p></Link>\n                <div className='DeepSea_Background' ref={backgroundRef}>\n                    <img src='/UnderTheSea.png' className='UnderTheSea_Image' alt='UnderTheSea'></img>\n                    <div \n                        style={{\n                            position: 'absolute',\n                            left: `${fishPosition.x}px`,\n                            top: `${fishPosition.y}px`,\n                            width: '30px',\n                            height: '30px',\n                            backgroundColor: 'orange',\n                        }}\n                    />\n                    <img \n                        src='/Turtle_Right.png' \n                        alt='Turtle'\n                        style={{\n                            position: 'absolute',\n                            left: `${turtlePosition.x}px`,\n                            top: `${turtlePosition.y}px`,\n                            transform: `scaleX(${turtleDirection === 'left' ? -1 : 1})`,\n                            transition: 'left 0.1s, top 0.1s',\n                            width: '50px',\n                            height: '50px',\n                        }}\n                    />\n                    {showBubble && (\n                        <div style={{\n                            position: 'absolute',\n                            left: `${turtlePosition.x + 60}px`,\n                            top: `${turtlePosition.y - 30}px`,\n                            backgroundColor: 'white',\n                            borderRadius: '15px',\n                            padding: '5px 10px',\n                            boxShadow: '0 0 5px rgba(0,0,0,0.3)',\n                        }}>\n                            맛있어!\n                        </div>\n                    )}\n                </div>\n            </div>\n            {/* 여기에 DeepSea 컴포넌트의 주요 내용을 추가하세요 */}\n        </div>\n    )\n}"],"mappings":";;AAAA,OAAO,mBAAmB;AAC1B,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC;IAAEU,CAAC,EAAE,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EACpE,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;EAC/D,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC;IAAEU,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC,CAAC;EACpE,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMkB,aAAa,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACZ,MAAMkB,aAAa,GAAIC,KAAK,IAAK;MAC7B,MAAMC,IAAI,GAAG,EAAE;MACf,MAAMC,cAAc,GAAGJ,aAAa,CAACK,OAAO,CAACC,qBAAqB,CAAC,CAAC;MACpE,MAAMC,UAAU,GAAG;QAAEC,KAAK,EAAE,EAAE;QAAEC,MAAM,EAAE;MAAG,CAAC,CAAC,CAAC;;MAE9C,MAAMC,WAAW,GAAG;QAAE,GAAGpB;MAAe,CAAC;MAEzC,QAAQY,KAAK,CAACS,GAAG;QACb,KAAK,SAAS;UACVD,WAAW,CAACjB,CAAC,GAAGmB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEvB,cAAc,CAACG,CAAC,GAAGU,IAAI,CAAC;UACpD;QACJ,KAAK,WAAW;UACZO,WAAW,CAACjB,CAAC,GAAGmB,IAAI,CAACE,GAAG,CAACV,cAAc,CAACK,MAAM,GAAGF,UAAU,CAACE,MAAM,EAAEnB,cAAc,CAACG,CAAC,GAAGU,IAAI,CAAC;UAC5F;QACJ,KAAK,WAAW;UACZO,WAAW,CAAClB,CAAC,GAAGoB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEvB,cAAc,CAACE,CAAC,GAAGW,IAAI,CAAC;UACpDR,kBAAkB,CAAC,MAAM,CAAC;UAC1B;QACJ,KAAK,YAAY;UACbe,WAAW,CAAClB,CAAC,GAAGoB,IAAI,CAACE,GAAG,CAACV,cAAc,CAACI,KAAK,GAAGD,UAAU,CAACC,KAAK,EAAElB,cAAc,CAACE,CAAC,GAAGW,IAAI,CAAC;UAC1FR,kBAAkB,CAAC,OAAO,CAAC;UAC3B;QACJ;UACI;MACR;;MAEA;MACA,MAAMoB,UAAU,GAAG;QACfC,IAAI,EAAEN,WAAW,CAAClB,CAAC;QACnByB,KAAK,EAAEP,WAAW,CAAClB,CAAC,GAAG,EAAE;QACzB0B,GAAG,EAAER,WAAW,CAACjB,CAAC;QAClB0B,MAAM,EAAET,WAAW,CAACjB,CAAC,GAAG;MAC5B,CAAC;MACD,MAAM2B,QAAQ,GAAG;QACbJ,IAAI,EAAEpB,YAAY,CAACJ,CAAC;QACpByB,KAAK,EAAErB,YAAY,CAACJ,CAAC,GAAG,EAAE;QAC1B0B,GAAG,EAAEtB,YAAY,CAACH,CAAC;QACnB0B,MAAM,EAAEvB,YAAY,CAACH,CAAC,GAAG;MAC7B,CAAC;MAED,IACIsB,UAAU,CAACC,IAAI,GAAGI,QAAQ,CAACH,KAAK,IAChCF,UAAU,CAACE,KAAK,GAAGG,QAAQ,CAACJ,IAAI,IAChCD,UAAU,CAACG,GAAG,GAAGE,QAAQ,CAACD,MAAM,IAChCJ,UAAU,CAACI,MAAM,GAAGC,QAAQ,CAACF,GAAG,EAClC;QACEnB,aAAa,CAAC,IAAI,CAAC;QACnBsB,UAAU,CAAC,MAAMtB,aAAa,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC;QAC5C;QACAF,eAAe,CAAC;UACZL,CAAC,EAAEoB,IAAI,CAACU,MAAM,CAAC,CAAC,IAAIlB,cAAc,CAACI,KAAK,GAAG,EAAE,CAAC;UAC9Cf,CAAC,EAAEmB,IAAI,CAACU,MAAM,CAAC,CAAC,IAAIlB,cAAc,CAACK,MAAM,GAAG,EAAE;QAClD,CAAC,CAAC;MACN;MAEAlB,iBAAiB,CAACmB,WAAW,CAAC;IAClC,CAAC;IAEDa,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEvB,aAAa,CAAC;IACjD,OAAO,MAAM;MACTsB,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAExB,aAAa,CAAC;IACxD,CAAC;EACL,CAAC,EAAE,CAACX,cAAc,EAAEM,YAAY,CAAC,CAAC;EAElC,oBACIT,OAAA;IAAAuC,QAAA,eACIvC,OAAA;MAAKwC,SAAS,EAAC,MAAM;MAAAD,QAAA,gBACjBvC,OAAA;QAAGwC,SAAS,EAAC,UAAU;QAAAD,QAAA,EAAC;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9B5C,OAAA,CAACF,IAAI;QAAC+C,EAAE,EAAC,QAAQ;QAAAN,QAAA,eAACvC,OAAA;UAAGwC,SAAS,EAAC,QAAQ;UAAAD,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvD5C,OAAA;QAAKwC,SAAS,EAAC,oBAAoB;QAACM,GAAG,EAAEjC,aAAc;QAAA0B,QAAA,gBACnDvC,OAAA;UAAK+C,GAAG,EAAC,kBAAkB;UAACP,SAAS,EAAC,mBAAmB;UAACQ,GAAG,EAAC;QAAa;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAClF5C,OAAA;UACIiD,KAAK,EAAE;YACHC,QAAQ,EAAE,UAAU;YACpBrB,IAAI,EAAE,GAAGpB,YAAY,CAACJ,CAAC,IAAI;YAC3B0B,GAAG,EAAE,GAAGtB,YAAY,CAACH,CAAC,IAAI;YAC1Be,KAAK,EAAE,MAAM;YACbC,MAAM,EAAE,MAAM;YACd6B,eAAe,EAAE;UACrB;QAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eACF5C,OAAA;UACI+C,GAAG,EAAC,mBAAmB;UACvBC,GAAG,EAAC,QAAQ;UACZC,KAAK,EAAE;YACHC,QAAQ,EAAE,UAAU;YACpBrB,IAAI,EAAE,GAAG1B,cAAc,CAACE,CAAC,IAAI;YAC7B0B,GAAG,EAAE,GAAG5B,cAAc,CAACG,CAAC,IAAI;YAC5B8C,SAAS,EAAE,UAAU7C,eAAe,KAAK,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG;YAC3D8C,UAAU,EAAE,qBAAqB;YACjChC,KAAK,EAAE,MAAM;YACbC,MAAM,EAAE;UACZ;QAAE;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,EACDjC,UAAU,iBACPX,OAAA;UAAKiD,KAAK,EAAE;YACRC,QAAQ,EAAE,UAAU;YACpBrB,IAAI,EAAE,GAAG1B,cAAc,CAACE,CAAC,GAAG,EAAE,IAAI;YAClC0B,GAAG,EAAE,GAAG5B,cAAc,CAACG,CAAC,GAAG,EAAE,IAAI;YACjC6C,eAAe,EAAE,OAAO;YACxBG,YAAY,EAAE,MAAM;YACpBC,OAAO,EAAE,UAAU;YACnBC,SAAS,EAAE;UACf,CAAE;UAAAjB,QAAA,EAAC;QAEH;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACR;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd;AAAC1C,EAAA,CAxHuBD,OAAO;AAAAwD,EAAA,GAAPxD,OAAO;AAAA,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}